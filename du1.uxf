<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>70</y>
      <w>330</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>bg=red
&lt;&lt;Interface&gt;&gt;
SimpleDominionInterface
--
playCard(handIdx: int): optional&lt;GameState&gt;
endPlayCardPhase(): optional&lt;GameState&gt; 
buyCard(buyCardIdx): optional&lt;GameState&gt;
endTurn(): optional&lt;GameState&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>110</y>
      <w>230</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>bg=red
&lt;&lt;Datatype&gt;&gt;
GameState
--
handCards: Card[]
buyCards: pair&lt;Card, int&gt;[]
deckSize: int
discardPileSize: int
discardPileTop: optional&lt;Card&gt;
actions: int
buys: int
coins: int
points: int
turnNumber: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1550</x>
      <y>160</y>
      <w>140</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>bg=red
&lt;&lt;Datatype&gt;&gt;
Card
--
name: string
description: string
cost: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1460</x>
      <y>180</y>
      <w>110</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>90.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>130</y>
      <w>210</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>190.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>200</y>
      <w>330</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SimpleDominion
--
Responsibilities
-- Puts GameStateResponse together</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>170</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1280</x>
      <y>580</y>
      <w>290</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>bg=blue
Hand
--
isActionCard(idx: int): bool
play(idx: int): optional&lt;CardInterface&gt;
--
Responsibilities
-- Check if card is in hand
-- Draws cards 
-- Redraw cards</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>220</x>
      <y>600</y>
      <w>240</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>bg=blue
BuyDeck
--
cardCount: int
--
buy(): optional&lt;CardInterface&gt;
--
Responsibilities
-- Creates cards</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>590</y>
      <w>260</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>bg=red
DiscardPile
--
putInto(card: CardInterface)
shulffleAndGetAll(): CardInterface[]
--
Responsibilities
-- Has discard pile cards
-- Shuffless</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>400</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>390</y>
      <w>150</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bg=blue
&lt;&lt;Interface&gt;&gt;
EndGameStrategy
--
isGameOver(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>400</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>bg=blue
AtLeastNEmptyDecks
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>410</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>530</x>
      <y>300</y>
      <w>170</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>bg=blue
EndGameStrategyAnd</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>340</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>340</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>100</x>
      <y>400</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>This covers both
3 empty decks rule
and out of provinces 
rule</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>430</x>
      <y>500</y>
      <w>320</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=*</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>510</y>
      <w>350</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;330.0;20.0;330.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>420</y>
      <w>30</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=*</panel_attributes>
    <additional_attributes>10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>910</x>
      <y>1040</y>
      <w>150</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>bg=red
&lt;&lt;datatype&gt;&gt;
GameCardType
{radonly}
--
plusActions: int
plusBuys: int
plusCards: int
plusCoins: int
points: int
cost: int
name: string
Decription: string
isActionCard: bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1270</x>
      <y>370</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=red
TurnStatus
--
actions: int
buys: int
gold: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1010</x>
      <y>600</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=blue
Deck
--
draw(count: int): CardInterface[]
--
Responsibilities
-- Contains deck cards
-- Get cards from top
-- Knows when to shuffle</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>640</y>
      <w>50</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>440</y>
      <w>260</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m2=1</panel_attributes>
    <additional_attributes>10.0;60.0;240.0;60.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>370</y>
      <w>240</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=1
new turn status &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>480</y>
      <w>330</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>bg=blue
Turn
--
Responsibilities
-- Tracks actions / buys / gold
-- Throws used cards into Play or DiscardPile
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>250</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>990</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>710</y>
      <w>370</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;30.0;350.0;30.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>640</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>870</x>
      <y>930</y>
      <w>240</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>bg=blue
GameCard
--
Responsibilities
-- Evaluates impact of the card</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>380</y>
      <w>520</w>
      <h>620</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>310.0;10.0;500.0;10.0;500.0;600.0;10.0;600.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>310</x>
      <y>100</y>
      <w>390</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Red classes are implemented. You should implement blue classes. You can ignore methods necessary to produce GameState response

Flexibility items:
- Implement NonShufflingDiscardPile that does not shuffle the cards.

Strictly solitary unit tests for:
Hand
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>370</x>
      <y>700</y>
      <w>520</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;creates&gt;&gt;</panel_attributes>
    <additional_attributes>500.0;280.0;10.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>710</y>
      <w>80</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.


&lt;&lt;use&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;30.0;60.0;30.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>300</y>
      <w>330</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>bg=blue
Game
--
playCard(handIdx: int): bool
endPlayCardPhase(): bool
buyCard(buyCardIdx): bool
endTurn(): bool
--
Responsibilities
-- Manages turns
-- Know if it is play or buy phase
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>440</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>600</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=blue
Play
--
putTo(card: CardInterface)
throwAll(): CardInterface[]
--
Responsibilities
-- Stores cards in play
-- Trows them to discard 
pile at the end of turn
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>540</y>
      <w>140</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>550</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>710</y>
      <w>260</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=.
</panel_attributes>
    <additional_attributes>240.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>530</y>
      <w>90</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;70.0;20.0;70.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>710</y>
      <w>160</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>140.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>780</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>bg=red
&lt;&lt;Interface&gt;&gt;
CardInterface
--
cardType: GameCardType
--
evaluate(TurnStatus&amp;): pair&lt;int&gt;
    {returns number of cards to draw}
getCardType(): GameCardType</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>890</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>520</y>
      <w>270</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>150.0;220.0;10.0;220.0;10.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>410</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
</diagram>
